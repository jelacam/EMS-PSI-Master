//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EMS {
    using System;
    using EMS;
    
    
    /// An electromechanical device that operates with shaft rotating synchronously with the network. It is a single machine operating either as a generator or synchronous condenser or pump.
    public class SynchronousMachine : RotatingMachine {
        
        private EmsFuelType? cim_fuelType;
        
        private const bool isFuelTypeMandatory = false;
        
        private const string _fuelTypePrefix = "cim";
        
        /// Maximum reactive power limit. This is the maximum (nameplate) limit for the unit.
        private System.Single? cim_maxQ;
        
        private const bool isMaxQMandatory = false;
        
        private const string _maxQPrefix = "cim";
        
        /// Minimum reactive power limit for the unit.
        private System.Single? cim_minQ;
        
        private const bool isMinQMandatory = false;
        
        private const string _minQPrefix = "cim";
        
        /// Current mode of operation.
        private SynchronousMachineOperatingMode? cim_operatingMode;
        
        private const bool isOperatingModeMandatory = false;
        
        private const string _operatingModePrefix = "cim";
        
        public virtual EmsFuelType FuelType {
            get {
                return this.cim_fuelType.GetValueOrDefault();
            }
            set {
                this.cim_fuelType = value;
            }
        }
        
        public virtual bool FuelTypeHasValue {
            get {
                return this.cim_fuelType != null;
            }
        }
        
        public static bool IsFuelTypeMandatory {
            get {
                return isFuelTypeMandatory;
            }
        }
        
        public static string FuelTypePrefix {
            get {
                return _fuelTypePrefix;
            }
        }
        
        public virtual float MaxQ {
            get {
                return this.cim_maxQ.GetValueOrDefault();
            }
            set {
                this.cim_maxQ = value;
            }
        }
        
        public virtual bool MaxQHasValue {
            get {
                return this.cim_maxQ != null;
            }
        }
        
        public static bool IsMaxQMandatory {
            get {
                return isMaxQMandatory;
            }
        }
        
        public static string MaxQPrefix {
            get {
                return _maxQPrefix;
            }
        }
        
        public virtual float MinQ {
            get {
                return this.cim_minQ.GetValueOrDefault();
            }
            set {
                this.cim_minQ = value;
            }
        }
        
        public virtual bool MinQHasValue {
            get {
                return this.cim_minQ != null;
            }
        }
        
        public static bool IsMinQMandatory {
            get {
                return isMinQMandatory;
            }
        }
        
        public static string MinQPrefix {
            get {
                return _minQPrefix;
            }
        }
        
        public virtual SynchronousMachineOperatingMode OperatingMode {
            get {
                return this.cim_operatingMode.GetValueOrDefault();
            }
            set {
                this.cim_operatingMode = value;
            }
        }
        
        public virtual bool OperatingModeHasValue {
            get {
                return this.cim_operatingMode != null;
            }
        }
        
        public static bool IsOperatingModeMandatory {
            get {
                return isOperatingModeMandatory;
            }
        }
        
        public static string OperatingModePrefix {
            get {
                return _operatingModePrefix;
            }
        }
    }
}
