<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:UIClient.Styles"
                    xmlns:view="clr-namespace:UIClient.View"
					xmlns:converters="clr-namespace:UIClient.Converters">

	<SolidColorBrush x:Key="AppBackground" Color="#FF6E6E6E"/>
	<SolidColorBrush x:Key="DarkBrush" Color="#FF2D2D30"/>
	<SolidColorBrush x:Key="LigthBrush" Color="#FF6E6E6E"/>
	<SolidColorBrush x:Key="BlueMouseOver" Color="#1C97EA"/>
    <SolidColorBrush x:Key="TextBrush" Color="White" />

    <Color x:Key="AccentColor" >#FF3DCD58</Color>

    <SolidColorBrush x:Key="DefaultedBorderBrush" Color="{StaticResource AccentColor}" />
    <SolidColorBrush x:Key="HoverBackgroundBrush"  Color="{StaticResource AccentColor}" Opacity="0.4"/>
    <SolidColorBrush x:Key="HoverBrush" Color="{StaticResource AccentColor}" Opacity="0.2"/>
    <SolidColorBrush x:Key="HoverBorderBrush" Color="{StaticResource AccentColor}" Opacity="0.4"/>
    <SolidColorBrush x:Key="PressedBackgroundBrush" Color="{StaticResource AccentColor}" Opacity="0.8"/>
    <SolidColorBrush x:Key="PressedBorderBrush" Color="{StaticResource AccentColor}" Opacity="0.1"/>
    <SolidColorBrush x:Key="SelectBrush" Color="{StaticResource AccentColor}" Opacity="0.6"/>
    
    <converters:TestConverter x:Key="TestConv"/>
	
	<Style TargetType="Window" x:Key="BasicWindowStyle">
		<Setter Property="Background" Value="{StaticResource AppBackground}" ></Setter>
		<Setter Property="Foreground" Value="White" ></Setter>
	</Style>
	<Style x:Key="Title" TargetType="TextBlock">
		<Setter Property="FontSize" Value="24"/>
	</Style>
	<Style x:Key="SubTitle" TargetType="TextBlock">
		<Setter Property="VerticalAlignment" Value="Bottom"></Setter>
		<Setter Property="FontSize" Value="20"/>
	</Style>
	<Style TargetType="Label" >
		<Setter Property="Foreground" Value="White" ></Setter>
	</Style>

	<Style TargetType="CheckBox" BasedOn="{StaticResource CheckBoxStyle}" x:Key="CheckBoxDarkStyle">
		<Setter Property="Foreground" Value="White" ></Setter>
	</Style>

	<Style TargetType="TabControl" x:Key="TabControlStyle">
		<Setter Property="Foreground" Value="White" ></Setter>
		<Setter Property="Background" Value="{StaticResource DarkBrush}"></Setter>
		<Setter Property="BorderThickness" Value="0" ></Setter>
	</Style>

    <Style TargetType="view:DashboardView" x:Key="DashboardStyle">
        <Setter Property="Foreground" Value="White" ></Setter>
        <Setter Property="Background" Value="{StaticResource DarkBrush}"></Setter>
        <Setter Property="BorderThickness" Value="0" ></Setter>
    </Style>

    <Style TargetType="view:AlarmSummaryView" x:Key="AlarmSummaryStyle">
        <Setter Property="Foreground" Value="White" ></Setter>
        <Setter Property="Background" Value="{StaticResource DarkBrush}"></Setter>
        <Setter Property="BorderThickness" Value="0" ></Setter>
    </Style>

    <Style TargetType="view:DMSOptionsView" x:Key="DMSOptions">
        <Setter Property="Foreground" Value="White" ></Setter>
        <Setter Property="Background" Value="{StaticResource DarkBrush}"></Setter>
        <Setter Property="BorderThickness" Value="0" ></Setter>
    </Style>

    <Style TargetType="view:HistoryView" x:Key="HistoryStyle">
        <Setter Property="Foreground" Value="White" ></Setter>
        <Setter Property="Background" Value="{StaticResource DarkBrush}"></Setter>
        <Setter Property="BorderThickness" Value="0" ></Setter>
    </Style>

    <Style TargetType="view:ImporterView" x:Key="ImporterStyle">
        <Setter Property="Foreground" Value="White" ></Setter>
        <Setter Property="Background" Value="{StaticResource DarkBrush}"></Setter>
        <Setter Property="BorderThickness" Value="0" ></Setter>
    </Style>

    <Style TargetType="view:NMSView" x:Key="NMSStyle">
        <Setter Property="Foreground" Value="White" ></Setter>
        <Setter Property="Background" Value="{StaticResource DarkBrush}"></Setter>
        <Setter Property="BorderThickness" Value="0" ></Setter>
    </Style>

	<Style TargetType="DataGrid">
		<Setter Property="Background" Value="{StaticResource DarkBrush}"></Setter>
		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
		<Setter Property="Foreground" Value="{StaticResource DarkBrush}"></Setter>
	</Style>

	<Style TargetType="TabItem" x:Key="TabItemStyle">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TabItem">
					<Grid Name="Panel">
						<ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10,2"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<Setter TargetName="Panel" Property="Background" Value="{StaticResource DarkBrush}" />
							<Setter Property="FontSize" Value="15"/>
							<Setter Property="Margin" Value="-1,0,-1,-1"/>
						</Trigger>
						<Trigger Property="IsSelected" Value="False">
							<Setter TargetName="Panel" Property="Background" Value="{StaticResource AppBackground}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="Button" x:Key="ExpButtonStyle">
		<Setter Property="Background" Value="Gray"/>
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="FontSize" Value="10"/>
		<!--<Setter Property="Margin" Value="0,0,-5,0"/>-->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid >
						<Rectangle Fill="{TemplateBinding Background}"></Rectangle>
						<ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        Margin="1"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{StaticResource BlueMouseOver}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="AlarmGridCell" TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
		<Setter Property="BorderThickness" Value="0" />
		<Style.Triggers>
			<DataTrigger Binding="{Binding Severity}" Value="CRITICAL">
				<Setter Property="Background" Value="Magenta"></Setter>
			</DataTrigger>

			<DataTrigger Binding="{Binding Severity}" Value="HIGH">
				<Setter Property="Background" Value="Red"></Setter>
			</DataTrigger>

			<DataTrigger Binding="{Binding Severity}" Value="MAJOR">
				<Setter Property="Background" Value="Orange"></Setter>
			</DataTrigger>

			<DataTrigger Binding="{Binding Severity}" Value="MEDIUM">
				<Setter Property="Background" Value="Yellow"></Setter>
				<Setter Property="Foreground" Value="Gray" />
			</DataTrigger>

			<DataTrigger Binding="{Binding Severity}" Value="LOW">
				<Setter Property="Background" Value="Green"></Setter>
			</DataTrigger>

			<DataTrigger Binding="{Binding Severity}" Value="MINOR">
				<Setter Property="Background" Value="Cyan"></Setter>
			</DataTrigger>
		</Style.Triggers>
	</Style>


	<Style x:Key="AlarmSummaryDataGridRowStyle" TargetType="DataGridRow">
		<Setter Property="Background" Value="Transparent"></Setter>
		<Setter Property="Foreground" Value="White"></Setter>
	</Style>

    <Style x:Key="ButtonBase" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8,0" />
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="0">
                            <ContentPresenter Name="Content"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                              RecognizesAccessKey="True" />
                        </Border>
                        <Border x:Name="DefaultedBorder" BorderBrush="{StaticResource DefaultedBorderBrush}" Margin="0" BorderThickness="2" CornerRadius="0" Opacity="0"/>
                        <Border Name="HoverBorder"
                                Background="{StaticResource HoverBrush}"
                                BorderBrush="{StaticResource HoverBorderBrush}"
                                BorderThickness="1" CornerRadius="0" 
                                Opacity="1" Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="DefaultedBorder" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="DefaultedBorder" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="HoverBorder" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PressedBorderBrush}" />
                            <Setter TargetName="HoverBorder" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="DefaultedBorder" Property="Visibility" Value="Collapsed" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonIcon" BasedOn="{StaticResource ButtonBase}" TargetType="{x:Type Button}">
        <Setter Property="MinHeight" Value="22" />
        <Setter Property="MinWidth" Value="22" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="0">
                        <Image x:Name="Content" Width="16" Height="16" Source="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource HoverBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PressedBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<Style x:Key="AlarmDataGridColumnHeaderStyle" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
		<Setter Property="Background" Value="Gray" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="Padding" Value="3,2,4,2" />
		<Setter Property="BorderThickness" Value="1,0,0,0"/>
		<Setter Property="BorderBrush" Value="DarkGray"/>
		<!--<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Grid>
						<TextBlock HorizontalAlignment="Left" Margin="3,0,0,0"></TextBlock>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>-->
	</Style>

</ResourceDictionary>